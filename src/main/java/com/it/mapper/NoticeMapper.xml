<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.dao.systemManagement.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.it.po.Notice">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="TYPE" jdbcType="INTEGER" property="type" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="CREATOR" jdbcType="VARCHAR" property="creator" />
    <result column="CREATEDATE" jdbcType="VARCHAR" property="createDate" />
  </resultMap>
  
  <sql id="Base_Column_List">
    ID, TITLE, TYPE, CONTENT, STATUS, CREATOR, to_char(CREATEDATE, 'yyyy-mm-dd hh24:mi:ss') CREATEDATE
  </sql>
  
  <select id="search" resultType="Notice" parameterType="Notice">
  	select 
  	<include refid="Base_Column_List"></include>
  	from NOTICE where 1=1
  	 <if test="title != null and title != ''">and title like concat(concat('%',#{title}),'%')</if>
  	 <if test="type != null and type != ''">and type = #{type}</if>
  	 order by id desc
  </select>
  
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from NOTICE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from NOTICE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="batchDelete" parameterType="Integer">
		delete from NOTICE
		where id in
		<foreach collection="array" index="index" item="item" open="(" separator="," close=")">
        	#{item} 
    	</foreach>
  </delete>
  
  <insert id="insert" keyColumn="ID"  parameterType="Notice">
    insert into NOTICE (ID, TITLE, TYPE, CONTENT, STATUS, CREATOR, CREATEDATE)
    values (#{id,jdbcType=INTEGER},#{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      		#{status,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, sysdate)
      <selectKey order="BEFORE" resultType="Integer" keyProperty="id">
      	SELECT NOTICE_ID_SEQ.NEXTVAL-1 from DUAL
      </selectKey>
  </insert>
  
  <insert id="insertSelective" keyColumn="ID"  parameterType="Notice" useGeneratedKeys="true">
    insert into NOTICE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        TITLE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="Notice">
    update NOTICE
    <set>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="Notice">
    update NOTICE
    set TITLE = #{title,jdbcType=VARCHAR},
      	TYPE = #{type,jdbcType=INTEGER},
     	CONTENT = #{content,jdbcType=VARCHAR},
      	STATUS = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>